CREATE OR REPLACE FUNCTION pg_temp.decode_url_part(p varchar) RETURNS varchar AS $$
SELECT
  convert_from(CAST(E'\\x' || string_agg(CASE WHEN length(r.m[1]) = 1 THEN encode(convert_to(r.m[1], 'SQL_ASCII'), 'hex') ELSE substring(r.m[1] from 2 for 2) END, '') AS bytea), 'UTF8')
FROM regexp_matches($1, '%[0-9a-f][0-9a-f]|.', 'gi') AS r(m);
$$ LANGUAGE SQL IMMUTABLE STRICT;
with fabd_gabd_data1 as (     
	select ad_date,
		   url_parameters,
		   coalesce (spend, 0) as spend,
		   coalesce(impressions, 0) as impressions,
		   coalesce(reach, 0) as reach,
		   coalesce(clicks, 0) as clicks,
		   coalesce(leads, 0) as leads,
		   coalesce(value, 0) as value
	from facebook_ads_basic_daily fabd
	union all
	select ad_date,
		   url_parameters,
		   coalesce(spend, 0) as spend,
		   coalesce(impressions, 0) as impressions,
		   coalesce(reach, 0) as reach,
		   coalesce(clicks, 0) as clicks,
		   coalesce(leads, 0) as leads,
		   coalesce(value, 0) as value
	from google_ads_basic_daily gabd
),
fabd_gabd_data2 as (	
	select date_trunc ('month', ad_date) as ad_month,
		   case when lower(substring(decode_url_part(url_parameters), 'utm_campaign=([^\&]+)')) = 'nan' then null
			    else lower(substring(decode_url_part(url_parameters), 'utm_campaign=([^\&]+)'))
		   end as utm_campaign,
		   sum(spend) as amt_all_spend,
		   sum(impressions) as cnt_imps,
		   sum(clicks) as cnt_clicks,
		   sum(value) as income,
		   case when sum(impressions) > 0 then (sum(clicks)::numeric / sum(impressions)::numeric) * 100 end as CTR,
		   case when sum(clicks) > 0 then sum(spend)::numeric / sum(clicks)::numeric end as CPC,
		   case when sum(impressions) > 0 then (sum(spend)::numeric / sum(impressions)::numeric) * 1000 end as CPM,
		   case when sum(spend) > 0 then ((sum(value)::numeric - sum(spend)::numeric) / sum(spend)::numeric) * 100 end as ROMI
	from fabd_gabd_data1
	group by ad_month, utm_campaign
),
fabd_gabd_diff as (
	select ad_month,
		   utm_campaign,
		   amt_all_spend,
		   cnt_imps,
		   cnt_clicks,
		   income,
		   CPC,
		   CTR,
		   CPM,
		   ROMI,
		   (CTR - lag(CTR) over (partition  by utm_campaign order by ad_month)) / lag(CTR) over (partition  by utm_campaign order by ad_month) * 100 as diff_CTR_perc,
		   (CPM - lag(CPM) over (partition by utm_campaign order by ad_month)) / lag(CPM) over (partition  by utm_campaign order by ad_month) * 100 as diff_CPM_perc,
		   (ROMI - lag(ROMI) over (partition by utm_campaign order by ad_month)) / lag(ROMI) over (partition  by utm_campaign order by ad_month) * 100 as diff_ROMI_perc
	from fabd_gabd_data2 
)
select ad_month,
	   utm_campaign,
	   amt_all_spend,
	   cnt_imps,
	   cnt_clicks,
	   income,
	   CPC,
	   CTR,
	   diff_CTR_perc,
	   CPM,
	   diff_CPM_perc,
	   ROMI,
	   diff_ROMI_perc
from fabd_gabd_diff
;
